1. 算法思想汇总：核心：分而治之，化整为零，化繁为简（包括时间空间），  缓存，递归，贪心局部最优。相似的功能块抽象为类；区分对象的相同与不同；
2. 抽象类与接口分别： 使用上是否支持多继承等。更核心的是设计目的区别：抽象类为了避免重复代码； 接口是为了体现约束关系；
3. 同一对象复杂功能的实现，不要深层次的继承。拆分为子组件，用零件挂载实现更好。
4. 模块之间不要有很明显的引用关系，防止复用模块或改名改路径时，导致引用报错
5. 全局对象有创建，一定要有销毁。对象完整生命周期管理，对全局有影响的操作 例如：定时器， requestAnimationFrame，事件监听等，都要考虑不用时的移除。
6. 不管数据结构，逻辑关系，一定要剪除任何多余的，没有用到的，摩棱两可的，可有可无的东西，即使现在没有问题，将来扩展时一定会出问题；
