{"version":3,"sources":["file:///D:/app/cocos/editors/Creator/3.8.5/resources/resources/3d/engine/editor/assets/default_renderpipeline/builtin-pipeline-settings.ts"],"names":["_decorator","Camera","CCBoolean","CCFloat","CCInteger","Component","Material","rendering","Texture2D","EDITOR","fillRequiredPipelineSettings","makePipelineSettings","ccclass","disallowMultiple","executeInEditMode","menu","property","requireComponent","type","BuiltinPipelineSettings","displayName","group","id","name","style","range","tooltip","slide","min","getPipelineSettings","_settings","onEnable","cameraComponent","getComponent","camera","pipelineSettings","_tryEnableEditorPreview","onDisable","_disableEditorPreview","editorPreview","_editorPreview","v","undefined","setEditorPipelineSettings","current","getEditorPipelineSettings","MsaaEnable","msaa","enabled","value","msaaSampleCount","Math","ceil","log2","max","sampleCount","shadingScaleEnable","enableShadingScale","shadingScale","bloomEnable","bloom","bloomMaterial","material","bloomEnableAlphaMask","enableAlphaMask","bloomIterations","iterations","bloomThreshold","threshold","bloomIntensity","intensity","colorGradingEnable","colorGrading","colorGradingMaterial","colorGradingContribute","contribute","colorGradingMap","val","fxaaEnable","fxaa","fxaaMaterial","fsrEnable","fsr","fsrMaterial","fsrSharpness","sharpness","toneMappingMaterial","toneMapping"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBIA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,O,OAAAA,O;AAASC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AACnDC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;;AAGhBC,MAAAA,M,UAAAA,M;;AAGLC,MAAAA,4B,iBAAAA,4B;AAA8BC,MAAAA,oB,iBAAAA,oB;;;;;;AAhClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;OAaM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,gBAAX;AAA6BC,QAAAA,iBAA7B;AAAgDC,QAAAA,IAAhD;AAAsDC,QAAAA,QAAtD;AAAgEC,QAAAA,gBAAhE;AAAkFC,QAAAA;AAAlF,O,GAA2FlB,U;;yCAOpFmB,uB,WALZP,OAAO,CAAC,yBAAD,C,UACPG,IAAI,CAAC,mCAAD,C,UACJE,gBAAgB,CAAChB,MAAD,C,UAiCZe,QAAQ,CAACd,SAAD,C,UAGRc,QAAQ,CAAC;AACNI,QAAAA,WAAW,EAAE,+BADP;AAENF,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,UAkCRc,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,MAAN;AAAcC,UAAAA,IAAI,EAAE;AAApB,SADD;AAENL,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,UAcRc,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,MAAN;AAAcC,UAAAA,IAAI,EAAE,2BAApB;AAAiDC,UAAAA,KAAK,EAAE;AAAxD,SADD;AAENN,QAAAA,IAAI,EAAEd,SAFA;AAGNqB,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAHD,OAAD,C,UAkBRT,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,cAAN;AAAsBC,UAAAA,IAAI,EAAE,cAA5B;AAA4CC,UAAAA,KAAK,EAAE;AAAnD,SADD;AAENN,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,UAcRc,QAAQ,CAAC;AACNU,QAAAA,OAAO,EAAE,+BADH;AAENL,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,cAAN;AAAsBC,UAAAA,IAAI,EAAE;AAA5B,SAFD;AAGNL,QAAAA,IAAI,EAAEf,OAHA;AAINsB,QAAAA,KAAK,EAAE,CAAC,IAAD,EAAO,CAAP,EAAU,IAAV,CAJD;AAKNE,QAAAA,KAAK,EAAE;AALD,OAAD,C,WAkBRX,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAE,wBAArB;AAA+CC,UAAAA,KAAK,EAAE;AAAtD,SADD;AAENN,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,WAcRc,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAE,wBAArB;AAA+CC,UAAAA,KAAK,EAAE;AAAtD,SADD;AAENN,QAAAA,IAAI,EAAEZ;AAFA,OAAD,C,WAiBRU,QAAQ,CAAC;AACNU,QAAAA,OAAO,EAAE,4BADH;AAENL,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAE,wBAArB;AAA+CC,UAAAA,KAAK,EAAE;AAAtD,SAFD;AAGNN,QAAAA,IAAI,EAAEhB;AAHA,OAAD,C,WAeRc,QAAQ,CAAC;AACNU,QAAAA,OAAO,EAAE,uBADH;AAENL,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAE,wBAArB;AAA+CC,UAAAA,KAAK,EAAE;AAAtD,SAFD;AAGNN,QAAAA,IAAI,EAAEd,SAHA;AAINqB,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJD;AAKNE,QAAAA,KAAK,EAAE;AALD,OAAD,C,WAiBRX,QAAQ,CAAC;AACNU,QAAAA,OAAO,EAAE,sBADH;AAENL,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAE,wBAArB;AAA+CC,UAAAA,KAAK,EAAE;AAAtD,SAFD;AAGNN,QAAAA,IAAI,EAAEf,OAHA;AAINyB,QAAAA,GAAG,EAAE;AAJC,OAAD,C,WAqBRZ,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,eAAN;AAAuBC,UAAAA,IAAI,EAAE,qCAA7B;AAAoEC,UAAAA,KAAK,EAAE;AAA3E,SADD;AAENN,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,WAcRc,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,eAAN;AAAuBC,UAAAA,IAAI,EAAE,qCAA7B;AAAoEC,UAAAA,KAAK,EAAE;AAA3E,SADD;AAENN,QAAAA,IAAI,EAAEZ;AAFA,OAAD,C,WAiBRU,QAAQ,CAAC;AACNU,QAAAA,OAAO,EAAE,+BADH;AAENL,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,eAAN;AAAuBC,UAAAA,IAAI,EAAE,qCAA7B;AAAoEC,UAAAA,KAAK,EAAE;AAA3E,SAFD;AAGNN,QAAAA,IAAI,EAAEf,OAHA;AAINsB,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CAJD;AAKNE,QAAAA,KAAK,EAAE;AALD,OAAD,C,WAcRX,QAAQ,CAAC;AACNU,QAAAA,OAAO,EAAE,gCADH;AAENL,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,eAAN;AAAuBC,UAAAA,IAAI,EAAE,qCAA7B;AAAoEC,UAAAA,KAAK,EAAE;AAA3E,SAFD;AAGNN,QAAAA,IAAI,EAAEV;AAHA,OAAD,C,WAgBRQ,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,MAAN;AAAcC,UAAAA,IAAI,EAAE,iDAApB;AAAuEC,UAAAA,KAAK,EAAE;AAA9E,SADD;AAENN,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,WAcRc,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,MAAN;AAAcC,UAAAA,IAAI,EAAE,iDAApB;AAAuEC,UAAAA,KAAK,EAAE;AAA9E,SADD;AAENN,QAAAA,IAAI,EAAEZ;AAFA,OAAD,C,WAkBRU,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,KAAN;AAAaC,UAAAA,IAAI,EAAE,6BAAnB;AAAkDC,UAAAA,KAAK,EAAE;AAAzD,SADD;AAENN,QAAAA,IAAI,EAAEhB;AAFA,OAAD,C,WAcRc,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,KAAN;AAAaC,UAAAA,IAAI,EAAE,6BAAnB;AAAkDC,UAAAA,KAAK,EAAE;AAAzD,SADD;AAENN,QAAAA,IAAI,EAAEZ;AAFA,OAAD,C,WAiBRU,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,KAAN;AAAaC,UAAAA,IAAI,EAAE,6BAAnB;AAAkDC,UAAAA,KAAK,EAAE;AAAzD,SADD;AAENN,QAAAA,IAAI,EAAEf,OAFA;AAGNsB,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CAHD;AAINE,QAAAA,KAAK,EAAE;AAJD,OAAD,C,WAaRX,QAAQ,CAAC;AACNK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAE,aAAN;AAAqBC,UAAAA,IAAI,EAAE,aAA3B;AAA0CC,UAAAA,KAAK,EAAE;AAAjD,SADD;AAENN,QAAAA,IAAI,EAAEZ;AAFA,OAAD,C,8CAlWZO,gB,UACAC,iB,qBAJD,MAKaK,uBALb,SAK6Cd,SAL7C,CAKuD;AAAA;AAAA;;AAAA;;AA6BnD;AA7BmD;AAAA;;AAInDwB,QAAAA,mBAAmB,GAAqB;AACpC,iBAAO,KAAKC,SAAZ;AACH,SANkD,CAQnD;;;AACAC,QAAAA,QAAQ,GAAS;AACb;AAAA;AAAA,4EAA6B,KAAKD,SAAlC;AACA,cAAME,eAAe,GAAG,KAAKC,YAAL,CAAkBhC,MAAlB,CAAxB;AACA,cAAMiC,MAAM,GAAGF,eAAe,CAACE,MAA/B;AACAA,UAAAA,MAAM,CAACC,gBAAP,GAA0B,KAAKL,SAA/B;;AAEA,cAAIrB,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACDC,QAAAA,SAAS,GAAS;AACd,cAAML,eAAe,GAAG,KAAKC,YAAL,CAAkBhC,MAAlB,CAAxB;AACA,cAAMiC,MAAM,GAAGF,eAAe,CAACE,MAA/B;AACAA,UAAAA,MAAM,CAACC,gBAAP,GAA0B,IAA1B;;AAEA,cAAI1B,MAAJ,EAAY;AACR,iBAAK6B,qBAAL;AACH;AACJ;;AAUgB,YAAbC,aAAa,GAAY;AACzB,iBAAO,KAAKC,cAAZ;AACH;;AACgB,YAAbD,aAAa,CAACE,CAAD,EAAa;AAC1B,eAAKD,cAAL,GAAsBC,CAAtB;;AACA,cAAIhC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACMA,QAAAA,uBAAuB,GAAS;AACnC,cAAI7B,SAAS,KAAKmC,SAAlB,EAA6B;AACzB;AACH;;AACD,cAAI,KAAKF,cAAT,EAAyB;AACrBjC,YAAAA,SAAS,CAACoC,yBAAV,CAAoC,KAAKb,SAAzC;AACH,WAFD,MAEO;AACH,iBAAKQ,qBAAL;AACH;AACJ;;AACMA,QAAAA,qBAAqB,GAAS;AACjC,cAAI/B,SAAS,KAAKmC,SAAlB,EAA6B;AACzB;AACH;;AACD,cAAME,OAAO,GAAGrC,SAAS,CAACsC,yBAAV,EAAhB;;AACA,cAAID,OAAO,KAAK,KAAKd,SAArB,EAAgC;AAC5BvB,YAAAA,SAAS,CAACoC,yBAAV,CAAoC,IAApC;AACH;AACJ,SAhEkD,CAkEnD;;;AAKc,YAAVG,UAAU,GAAY;AACtB,iBAAO,KAAKhB,SAAL,CAAeiB,IAAf,CAAoBC,OAA3B;AACH;;AACa,YAAVF,UAAU,CAACG,KAAD,EAAiB;AAC3B,eAAKnB,SAAL,CAAeiB,IAAf,CAAoBC,OAApB,GAA8BC,KAA9B;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AAOkB,YAAfc,eAAe,CAACD,KAAD,EAAgB;AAC/BA,UAAAA,KAAK,GAAG,KAAKE,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,IAAL,CAAUF,IAAI,CAACG,GAAL,CAASL,KAAT,EAAgB,CAAhB,CAAV,CAAV,CAAb;AACAA,UAAAA,KAAK,GAAGE,IAAI,CAACvB,GAAL,CAASqB,KAAT,EAAgB,CAAhB,CAAR;AACA,eAAKnB,SAAL,CAAeiB,IAAf,CAAoBQ,WAApB,GAAkCN,KAAlC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACkB,YAAfc,eAAe,GAAW;AAC1B,iBAAO,KAAKpB,SAAL,CAAeiB,IAAf,CAAoBQ,WAA3B;AACH,SAhGkD,CAkGnD;;;AAKsB,YAAlBC,kBAAkB,CAACP,KAAD,EAAiB;AACnC,eAAKnB,SAAL,CAAe2B,kBAAf,GAAoCR,KAApC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACqB,YAAlBoB,kBAAkB,GAAY;AAC9B,iBAAO,KAAK1B,SAAL,CAAe2B,kBAAtB;AACH;;AASe,YAAZC,YAAY,CAACT,KAAD,EAAgB;AAC5B,eAAKnB,SAAL,CAAe4B,YAAf,GAA8BT,KAA9B;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACe,YAAZsB,YAAY,GAAW;AACvB,iBAAO,KAAK5B,SAAL,CAAe4B,YAAtB;AACH,SAhIkD,CAkInD;;;AAKe,YAAXC,WAAW,CAACV,KAAD,EAAiB;AAC5B,eAAKnB,SAAL,CAAe8B,KAAf,CAAqBZ,OAArB,GAA+BC,KAA/B;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACc,YAAXuB,WAAW,GAAY;AACvB,iBAAO,KAAK7B,SAAL,CAAe8B,KAAf,CAAqBZ,OAA5B;AACH;;AAMgB,YAAba,aAAa,CAACZ,KAAD,EAAkB;AAC/B,cAAI,KAAKnB,SAAL,CAAe8B,KAAf,CAAqBE,QAArB,KAAkCb,KAAtC,EAA6C;AACzC;AACH;;AACD,eAAKnB,SAAL,CAAe8B,KAAf,CAAqBE,QAArB,GAAgCb,KAAhC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACgB,YAAbyB,aAAa,GAAa;AAC1B,iBAAO,KAAK/B,SAAL,CAAe8B,KAAf,CAAqBE,QAA5B;AACH;;AAOuB,YAApBC,oBAAoB,CAACd,KAAD,EAAiB;AACrC,eAAKnB,SAAL,CAAe8B,KAAf,CAAqBI,eAArB,GAAuCf,KAAvC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACuB,YAApB2B,oBAAoB,GAAY;AAChC,iBAAO,KAAKjC,SAAL,CAAe8B,KAAf,CAAqBI,eAA5B;AACH;;AASkB,YAAfC,eAAe,CAAChB,KAAD,EAAgB;AAC/B,eAAKnB,SAAL,CAAe8B,KAAf,CAAqBM,UAArB,GAAkCjB,KAAlC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACkB,YAAf6B,eAAe,GAAW;AAC1B,iBAAO,KAAKnC,SAAL,CAAe8B,KAAf,CAAqBM,UAA5B;AACH;;AAQiB,YAAdC,cAAc,CAAClB,KAAD,EAAgB;AAC9B,eAAKnB,SAAL,CAAe8B,KAAf,CAAqBQ,SAArB,GAAiCnB,KAAjC;AACH;;AACiB,YAAdkB,cAAc,GAAW;AACzB,iBAAO,KAAKrC,SAAL,CAAe8B,KAAf,CAAqBQ,SAA5B;AACH;;AAEiB,YAAdC,cAAc,CAACpB,KAAD,EAAgB;AAC9B,eAAKnB,SAAL,CAAe8B,KAAf,CAAqBU,SAArB,GAAiCrB,KAAjC;AACH;;AACiB,YAAdoB,cAAc,GAAW;AACzB,iBAAO,KAAKvC,SAAL,CAAe8B,KAAf,CAAqBU,SAA5B;AACH,SApNkD,CAsNnD;;;AAKsB,YAAlBC,kBAAkB,CAACtB,KAAD,EAAiB;AACnC,eAAKnB,SAAL,CAAe0C,YAAf,CAA4BxB,OAA5B,GAAsCC,KAAtC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACqB,YAAlBmC,kBAAkB,GAAY;AAC9B,iBAAO,KAAKzC,SAAL,CAAe0C,YAAf,CAA4BxB,OAAnC;AACH;;AAMuB,YAApByB,oBAAoB,CAACxB,KAAD,EAAkB;AACtC,cAAI,KAAKnB,SAAL,CAAe0C,YAAf,CAA4BV,QAA5B,KAAyCb,KAA7C,EAAoD;AAChD;AACH;;AACD,eAAKnB,SAAL,CAAe0C,YAAf,CAA4BV,QAA5B,GAAuCb,KAAvC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACuB,YAApBqC,oBAAoB,GAAa;AACjC,iBAAO,KAAK3C,SAAL,CAAe0C,YAAf,CAA4BV,QAAnC;AACH;;AASyB,YAAtBY,sBAAsB,CAACzB,KAAD,EAAgB;AACtC,eAAKnB,SAAL,CAAe0C,YAAf,CAA4BG,UAA5B,GAAyC1B,KAAzC;AACH;;AACyB,YAAtByB,sBAAsB,GAAW;AACjC,iBAAO,KAAK5C,SAAL,CAAe0C,YAAf,CAA4BG,UAAnC;AACH;;AAOkB,YAAfC,eAAe,CAACC,GAAD,EAAiB;AAChC,eAAK/C,SAAL,CAAe0C,YAAf,CAA4BI,eAA5B,GAA8CC,GAA9C;;AACA,cAAIpE,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACkB,YAAfwC,eAAe,GAAc;AAC7B,iBAAO,KAAK9C,SAAL,CAAe0C,YAAf,CAA4BI,eAAnC;AACH,SAjRkD,CAmRnD;;;AAKc,YAAVE,UAAU,CAAC7B,KAAD,EAAiB;AAC3B,eAAKnB,SAAL,CAAeiD,IAAf,CAAoB/B,OAApB,GAA8BC,KAA9B;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACa,YAAV0C,UAAU,GAAY;AACtB,iBAAO,KAAKhD,SAAL,CAAeiD,IAAf,CAAoB/B,OAA3B;AACH;;AAMe,YAAZgC,YAAY,CAAC/B,KAAD,EAAkB;AAC9B,cAAI,KAAKnB,SAAL,CAAeiD,IAAf,CAAoBjB,QAApB,KAAiCb,KAArC,EAA4C;AACxC;AACH;;AACD,eAAKnB,SAAL,CAAeiD,IAAf,CAAoBjB,QAApB,GAA+Bb,KAA/B;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACe,YAAZ4C,YAAY,GAAa;AACzB,iBAAO,KAAKlD,SAAL,CAAeiD,IAAf,CAAoBjB,QAA3B;AACH,SAjTkD,CAmTnD;;;AAKa,YAATmB,SAAS,CAAChC,KAAD,EAAiB;AAC1B,eAAKnB,SAAL,CAAeoD,GAAf,CAAmBlC,OAAnB,GAA6BC,KAA7B;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACY,YAAT6C,SAAS,GAAY;AACrB,iBAAO,KAAKnD,SAAL,CAAeoD,GAAf,CAAmBlC,OAA1B;AACH;;AAMc,YAAXmC,WAAW,CAAClC,KAAD,EAAkB;AAC7B,cAAI,KAAKnB,SAAL,CAAeoD,GAAf,CAAmBpB,QAAnB,KAAgCb,KAApC,EAA2C;AACvC;AACH;;AACD,eAAKnB,SAAL,CAAeoD,GAAf,CAAmBpB,QAAnB,GAA8Bb,KAA9B;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACc,YAAX+C,WAAW,GAAa;AACxB,iBAAO,KAAKrD,SAAL,CAAeoD,GAAf,CAAmBpB,QAA1B;AACH;;AAQe,YAAZsB,YAAY,CAACnC,KAAD,EAAgB;AAC5B,eAAKnB,SAAL,CAAeoD,GAAf,CAAmBG,SAAnB,GAA+BpC,KAA/B;AACH;;AACe,YAAZmC,YAAY,GAAW;AACvB,iBAAO,KAAKtD,SAAL,CAAeoD,GAAf,CAAmBG,SAA1B;AACH;;AAMsB,YAAnBC,mBAAmB,CAACrC,KAAD,EAAkB;AACrC,cAAI,KAAKnB,SAAL,CAAeyD,WAAf,CAA2BzB,QAA3B,KAAwCb,KAA5C,EAAmD;AAC/C;AACH;;AACD,eAAKnB,SAAL,CAAeyD,WAAf,CAA2BzB,QAA3B,GAAsCb,KAAtC;;AACA,cAAIxC,MAAJ,EAAY;AACR,iBAAK2B,uBAAL;AACH;AACJ;;AACsB,YAAnBkD,mBAAmB,GAAa;AAChC,iBAAO,KAAKxD,SAAL,CAAeyD,WAAf,CAA2BzB,QAAlC;AACH;;AA/WkD,O,4EAClD9C,Q;;;;;iBAC8C;AAAA;AAAA,6D;;;;;;;iBA6BpB,K","sourcesContent":["/*\r\n Copyright (c) 2021-2024 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport {\r\n    _decorator, Camera, CCBoolean, CCFloat, CCInteger, Component,\r\n    Material, rendering, Texture2D,\r\n} from 'cc';\r\n\r\nimport { EDITOR } from 'cc/env';\r\n\r\nimport {\r\n    fillRequiredPipelineSettings, makePipelineSettings, PipelineSettings,\r\n} from './builtin-pipeline-types';\r\n\r\nconst { ccclass, disallowMultiple, executeInEditMode, menu, property, requireComponent, type } = _decorator;\r\n\r\n@ccclass('BuiltinPipelineSettings')\r\n@menu('Rendering/BuiltinPipelineSettings')\r\n@requireComponent(Camera)\r\n@disallowMultiple\r\n@executeInEditMode\r\nexport class BuiltinPipelineSettings extends Component {\r\n    @property\r\n    private readonly _settings: PipelineSettings = makePipelineSettings();\r\n\r\n    getPipelineSettings(): PipelineSettings {\r\n        return this._settings;\r\n    }\r\n\r\n    // Enable/Disable\r\n    onEnable(): void {\r\n        fillRequiredPipelineSettings(this._settings);\r\n        const cameraComponent = this.getComponent(Camera)!;\r\n        const camera = cameraComponent.camera;\r\n        camera.pipelineSettings = this._settings;\r\n\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    onDisable(): void {\r\n        const cameraComponent = this.getComponent(Camera)!;\r\n        const camera = cameraComponent.camera;\r\n        camera.pipelineSettings = null;\r\n\r\n        if (EDITOR) {\r\n            this._disableEditorPreview();\r\n        }\r\n    }\r\n\r\n    // Editor Preview\r\n    @property(CCBoolean)\r\n    protected _editorPreview = false;\r\n\r\n    @property({\r\n        displayName: 'Editor Preview (Experimental)',\r\n        type: CCBoolean,\r\n    })\r\n    get editorPreview(): boolean {\r\n        return this._editorPreview;\r\n    }\r\n    set editorPreview(v: boolean) {\r\n        this._editorPreview = v;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    public _tryEnableEditorPreview(): void {\r\n        if (rendering === undefined) {\r\n            return;\r\n        }\r\n        if (this._editorPreview) {\r\n            rendering.setEditorPipelineSettings(this._settings);\r\n        } else {\r\n            this._disableEditorPreview();\r\n        }\r\n    }\r\n    public _disableEditorPreview(): void {\r\n        if (rendering === undefined) {\r\n            return;\r\n        }\r\n        const current = rendering.getEditorPipelineSettings() as PipelineSettings | null;\r\n        if (current === this._settings) {\r\n            rendering.setEditorPipelineSettings(null);\r\n        }\r\n    }\r\n\r\n    // MSAA\r\n    @property({\r\n        group: { id: 'MSAA', name: 'Multisample Anti-Aliasing' },\r\n        type: CCBoolean,\r\n    })\r\n    get MsaaEnable(): boolean {\r\n        return this._settings.msaa.enabled;\r\n    }\r\n    set MsaaEnable(value: boolean) {\r\n        this._settings.msaa.enabled = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n\r\n    @property({\r\n        group: { id: 'MSAA', name: 'Multisample Anti-Aliasing', style: 'section' },\r\n        type: CCInteger,\r\n        range: [2, 4, 2],\r\n    })\r\n    set msaaSampleCount(value: number) {\r\n        value = 2 ** Math.ceil(Math.log2(Math.max(value, 2)));\r\n        value = Math.min(value, 4);\r\n        this._settings.msaa.sampleCount = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get msaaSampleCount(): number {\r\n        return this._settings.msaa.sampleCount;\r\n    }\r\n\r\n    // Shading Scale\r\n    @property({\r\n        group: { id: 'ShadingScale', name: 'ShadingScale', style: 'section' },\r\n        type: CCBoolean,\r\n    })\r\n    set shadingScaleEnable(value: boolean) {\r\n        this._settings.enableShadingScale = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get shadingScaleEnable(): boolean {\r\n        return this._settings.enableShadingScale;\r\n    }\r\n\r\n    @property({\r\n        tooltip: 'i18n:postprocess.shadingScale',\r\n        group: { id: 'ShadingScale', name: 'ShadingScale' },\r\n        type: CCFloat,\r\n        range: [0.01, 4, 0.01],\r\n        slide: true,\r\n    })\r\n    set shadingScale(value: number) {\r\n        this._settings.shadingScale = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get shadingScale(): number {\r\n        return this._settings.shadingScale;\r\n    }\r\n\r\n    // Bloom\r\n    @property({\r\n        group: { id: 'Bloom', name: 'Bloom (PostProcessing)', style: 'section' },\r\n        type: CCBoolean,\r\n    })\r\n    set bloomEnable(value: boolean) {\r\n        this._settings.bloom.enabled = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get bloomEnable(): boolean {\r\n        return this._settings.bloom.enabled;\r\n    }\r\n\r\n    @property({\r\n        group: { id: 'Bloom', name: 'Bloom (PostProcessing)', style: 'section' },\r\n        type: Material,\r\n    })\r\n    set bloomMaterial(value: Material) {\r\n        if (this._settings.bloom.material === value) {\r\n            return;\r\n        }\r\n        this._settings.bloom.material = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get bloomMaterial(): Material {\r\n        return this._settings.bloom.material!;\r\n    }\r\n\r\n    @property({\r\n        tooltip: 'i18n:bloom.enableAlphaMask',\r\n        group: { id: 'Bloom', name: 'Bloom (PostProcessing)', style: 'section' },\r\n        type: CCBoolean,\r\n    })\r\n    set bloomEnableAlphaMask(value: boolean) {\r\n        this._settings.bloom.enableAlphaMask = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get bloomEnableAlphaMask(): boolean {\r\n        return this._settings.bloom.enableAlphaMask;\r\n    }\r\n\r\n    @property({\r\n        tooltip: 'i18n:bloom.iterations',\r\n        group: { id: 'Bloom', name: 'Bloom (PostProcessing)', style: 'section' },\r\n        type: CCInteger,\r\n        range: [1, 6, 1],\r\n        slide: true,\r\n    })\r\n    set bloomIterations(value: number) {\r\n        this._settings.bloom.iterations = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get bloomIterations(): number {\r\n        return this._settings.bloom.iterations;\r\n    }\r\n\r\n    @property({\r\n        tooltip: 'i18n:bloom.threshold',\r\n        group: { id: 'Bloom', name: 'Bloom (PostProcessing)', style: 'section' },\r\n        type: CCFloat,\r\n        min: 0,\r\n    })\r\n    set bloomThreshold(value: number) {\r\n        this._settings.bloom.threshold = value;\r\n    }\r\n    get bloomThreshold(): number {\r\n        return this._settings.bloom.threshold;\r\n    }\r\n\r\n    set bloomIntensity(value: number) {\r\n        this._settings.bloom.intensity = value;\r\n    }\r\n    get bloomIntensity(): number {\r\n        return this._settings.bloom.intensity;\r\n    }\r\n\r\n    // Color Grading (LDR)\r\n    @property({\r\n        group: { id: 'Color Grading', name: 'ColorGrading (LDR) (PostProcessing)', style: 'section' },\r\n        type: CCBoolean,\r\n    })\r\n    set colorGradingEnable(value: boolean) {\r\n        this._settings.colorGrading.enabled = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get colorGradingEnable(): boolean {\r\n        return this._settings.colorGrading.enabled;\r\n    }\r\n\r\n    @property({\r\n        group: { id: 'Color Grading', name: 'ColorGrading (LDR) (PostProcessing)', style: 'section' },\r\n        type: Material,\r\n    })\r\n    set colorGradingMaterial(value: Material) {\r\n        if (this._settings.colorGrading.material === value) {\r\n            return;\r\n        }\r\n        this._settings.colorGrading.material = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get colorGradingMaterial(): Material {\r\n        return this._settings.colorGrading.material!;\r\n    }\r\n\r\n    @property({\r\n        tooltip: 'i18n:color_grading.contribute',\r\n        group: { id: 'Color Grading', name: 'ColorGrading (LDR) (PostProcessing)', style: 'section' },\r\n        type: CCFloat,\r\n        range: [0, 1, 0.01],\r\n        slide: true,\r\n    })\r\n    set colorGradingContribute(value: number) {\r\n        this._settings.colorGrading.contribute = value;\r\n    }\r\n    get colorGradingContribute(): number {\r\n        return this._settings.colorGrading.contribute;\r\n    }\r\n\r\n    @property({\r\n        tooltip: 'i18n:color_grading.originalMap',\r\n        group: { id: 'Color Grading', name: 'ColorGrading (LDR) (PostProcessing)', style: 'section' },\r\n        type: Texture2D,\r\n    })\r\n    set colorGradingMap(val: Texture2D) {\r\n        this._settings.colorGrading.colorGradingMap = val;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get colorGradingMap(): Texture2D {\r\n        return this._settings.colorGrading.colorGradingMap!;\r\n    }\r\n\r\n    // FXAA\r\n    @property({\r\n        group: { id: 'FXAA', name: 'Fast Approximate Anti-Aliasing (PostProcessing)', style: 'section' },\r\n        type: CCBoolean,\r\n    })\r\n    set fxaaEnable(value: boolean) {\r\n        this._settings.fxaa.enabled = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get fxaaEnable(): boolean {\r\n        return this._settings.fxaa.enabled;\r\n    }\r\n\r\n    @property({\r\n        group: { id: 'FXAA', name: 'Fast Approximate Anti-Aliasing (PostProcessing)', style: 'section' },\r\n        type: Material,\r\n    })\r\n    set fxaaMaterial(value: Material) {\r\n        if (this._settings.fxaa.material === value) {\r\n            return;\r\n        }\r\n        this._settings.fxaa.material = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get fxaaMaterial(): Material {\r\n        return this._settings.fxaa.material!;\r\n    }\r\n\r\n    // FSR\r\n    @property({\r\n        group: { id: 'FSR', name: 'FidelityFX Super Resolution', style: 'section' },\r\n        type: CCBoolean,\r\n    })\r\n    set fsrEnable(value: boolean) {\r\n        this._settings.fsr.enabled = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get fsrEnable(): boolean {\r\n        return this._settings.fsr.enabled;\r\n    }\r\n\r\n    @property({\r\n        group: { id: 'FSR', name: 'FidelityFX Super Resolution', style: 'section' },\r\n        type: Material,\r\n    })\r\n    set fsrMaterial(value: Material) {\r\n        if (this._settings.fsr.material === value) {\r\n            return;\r\n        }\r\n        this._settings.fsr.material = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get fsrMaterial(): Material {\r\n        return this._settings.fsr.material!;\r\n    }\r\n\r\n    @property({\r\n        group: { id: 'FSR', name: 'FidelityFX Super Resolution', style: 'section' },\r\n        type: CCFloat,\r\n        range: [0, 1, 0.01],\r\n        slide: true,\r\n    })\r\n    set fsrSharpness(value: number) {\r\n        this._settings.fsr.sharpness = value;\r\n    }\r\n    get fsrSharpness(): number {\r\n        return this._settings.fsr.sharpness;\r\n    }\r\n\r\n    @property({\r\n        group: { id: 'ToneMapping', name: 'ToneMapping', style: 'section' },\r\n        type: Material,\r\n    })\r\n    set toneMappingMaterial(value: Material) {\r\n        if (this._settings.toneMapping.material === value) {\r\n            return;\r\n        }\r\n        this._settings.toneMapping.material = value;\r\n        if (EDITOR) {\r\n            this._tryEnableEditorPreview();\r\n        }\r\n    }\r\n    get toneMappingMaterial(): Material {\r\n        return this._settings.toneMapping.material!;\r\n    }\r\n}\r\n"]}