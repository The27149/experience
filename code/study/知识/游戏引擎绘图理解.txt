1 canvas模式： cpu计算渲染； webgl模式： gpu计算渲染

2. native与浏览器中canvas渲染效率差距 
	原因： 原生调用绘图API只跟自己系统的相关API打交道浏览器的Canvas要保持跨平台兼容性起码要适配（编译适配）到一个或几个通用图形（字体）封装库上并不一定能直接跟当前系统的绘制（字体）API打交道这就一层封装消耗了再为了把这层封装暴露成JS API又要包一层而 JS 运行效率大部分情况赶不上native导致第三层消耗所以相对的 canvas 要慢些

3.  cocos egret等游戏引擎效率问题
	利用 runtime 针对不同的平台直接使用对应系统的api进行封装及优化

4. 所有在 浏览器 上的东西，核心优势、特点就是兼容 跨平台。